import Head from "next/head";
import { useState, useEffect } from "react";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import pb from "../lib/pocketbase";
import { Auth } from "../components";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [projects, setProjects] = useState([]);
  const [issues, setIssues] = useState([]);
  const [comments, setComments] = useState([]);

  useEffect(() => {
    async function fetchProjects() {
      const resultList = await pb.collection("projects").getList(1, 5, {});
      setProjects(resultList?.items);
    }
    async function fetchIssues() {
      const resultList = await pb.collection("issues").getList(1, 50, {
        expand: 'project'
      });
      setIssues(resultList?.items);
    }
    async function fetchComments() {
      const resultList = await pb.collection("comments").getList(1, 50, {
        expand: "issue",
      });
      setComments(resultList?.items);
    }
    fetchProjects();
    fetchIssues();
    fetchComments();

    return () => {
      console.log("this will run on unmount");
    };
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-screen h-screen flex justify-center items-center">
        <Auth>
          <div>HEADER</div>
          <div className="flex">
            <div>SIDEBAR</div>
            <div>
              Projects:
              {projects && (
                <>
                  {" "}
                  <h3>Projects</h3>
                  <ul className="mb-4">
                    {projects.map((item, i) => (
                      <>
                        <h3>Projects</h3>
                        <li key={i}>
                          <p>
                            <b>{item.title}</b>
                          </p>
                          <div
                            className="text-gray-400"
                            dangerouslySetInnerHTML={{
                              __html: item.description,
                            }}
                          />
                        </li>
                      </>
                    ))}
                  </ul>
                </>
              )}
              {issues && (
                <>
                  <h3>Issues</h3>
                  <ul className="mb-4">
                    {issues.map((item, i) => (
                      <li key={i}>
                        <p>
                          <b>{item.title}</b> - {item.created}
                        </p>
                        <div
                          className="text-gray-400"
                          dangerouslySetInnerHTML={{ __html: item.description }}
                        />
                      </li>
                    ))}
                  </ul>
                </>
              )}
              {comments && (
                <>
                  <h3>comments</h3>
                  <ul className="mb-4">
                    {comments.map((item, i) => (
                      <li key={i}>
                        <p>
                          <b>{item.text}</b> - {item.created} on <b>{item.expand.issue.title}</b>
                        </p>
                        <div
                          className="text-gray-400"
                          dangerouslySetInnerHTML={{ __html: item.description }}
                        />
                      </li>
                    ))}
                  </ul>
                </>
              )}
            </div>
          </div>
        </Auth>
      </div>
    </>
  );
}
